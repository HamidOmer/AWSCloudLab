
  LabMaterialVolume<%-i%>:
    Type: AWS::EC2::Volume
    DeletionPolicy: Delete
    Properties:
      SnapshotId: "<%-user.labMaterialSnapshotId%>"
      AvailabilityZone:
        Fn::GetAtt:
        - Subnet
        - AvailabilityZone
      Tags:
      - Key: Name
        Value: LabMaterial-<%-user.email%>
  LabStorageVolume<%-i%>:
    Type: AWS::EC2::Volume
    DeletionPolicy: Snapshot
    Properties:
      SnapshotId: "<%-user.labStorageSnapshotId%>"
      AvailabilityZone:
        Fn::GetAtt:
        - Subnet
        - AvailabilityZone
      Tags:
      - Key: Owner
        Value: "<%-user.email%>"
      - Key: AWSAccount
        Value: "<%-user.awsAccount%>"
      - Key: Name
        Value: LabStorage-<%-user.email%>
  StudentInstance<%-i%>:
    Type: AWS::EC2::Instance
    DependsOn:
    - AttachGateway
    - Ec2KeyPairs
    Properties:
      ImageId: "<%-user.imageId%>"
      InstanceType:
        Ref: InstanceType
      KeyName: "<%-user.key%>"
      UserData:
        'Fn::Base64': !Sub |
            <powershell>
            $url = "https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/windows_amd64/AmazonSSMAgentSetup.exe"
            $output = "$PSScriptRoot\AmazonSSMAgentSetup.exe"
            $start_time = Get-Date
            (New-Object System.Net.WebClient).DownloadFile($url, $output)
            Write-Output "Time taken: $((Get-Date).Subtract($start_time).Seconds) second(s)"

            Set-ExecutionPolicy bypass
            Set-Location $PSScriptRoot
            Start-Process $output -ArgumentList "/s" -Wait
            Restart-Service AmazonSSMAgent
            </powershell>
      AvailabilityZone:
        Fn::GetAtt:
        - Subnet
        - AvailabilityZone
      Volumes:
      - VolumeId:
          Ref: LabStorageVolume<%-i%>
        Device: "/dev/sdg"
      - VolumeId:
          Ref: LabMaterialVolume<%-i%>
        Device: "/dev/sdh"
      Tags:
      - Key: Application
        Value:
          Ref: AWS::StackId
      - Key: Owner
        Value: "<%-user.email%>"
      - Key: AWSAccount
        Value: "<%-user.awsAccount%>"
      - Key: Name
        Value: "<%-user.email%>"
      - Key: IAMUser
        Value:
          Ref: CFNUser<%-i%>
      - Key: Password
        Value: "<%-user.password%>"
      - Key: LabRole
        #    <%if (user.role=='student') { %>
        Value: student
        #    <% }else{ %>
        Value: teacher
        #    <%}%>
      IamInstanceProfile:
#    <%if (user.role=='student') { %>
        Ref: StudentEC2InstanceProfile
#    <% }else{ %>
        Ref: TeacherEC2InstanceProfile
#    <%}%>
      NetworkInterfaces:
      - GroupSet:
        - Ref: InstanceSecurityGroup
        AssociatePublicIpAddress: 'true'
        DeviceIndex: '0'
        DeleteOnTermination: 'true'
        SubnetId:
          Ref: Subnet
