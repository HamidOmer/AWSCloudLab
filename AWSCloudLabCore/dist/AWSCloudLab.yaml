AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: AWS Cloud Lab SAM Deployment
Parameters:
  SourceBucket:
    Type: String
    Default: cloudformation2.cloudlabhk.com
    Description: Bucket Lambda deployment packages - awscloudlab_latest.zip and awscloudlabscheduler-1.0.jar
  KeypairsBucket:
    Type: String
    Default: awscloudlab-keypair
    Description: Bucket stores EC2 keypairs
  UserListBucket:
    Type: String
    Default: awscloudlab-userlist
    Description: Bucket stores Class Name List
  KeypairExpirationInDays:
    Type: Number
    Default: 30
    Description: The number of day to keep the key pair in KeypairsBucket
  cloudformationS3Bucket:
    Type: String
    Default: awscloudlab-cloudformation
    Description: Bucket store all Cloudformation templates and Lambda packages for Lab Environment.
  labWorkBucket:
    Type: String
    Default: awscloudlab-labwork
    Description: Bucket Store student works.
  labWorkExpirationInDays:
    Type: Number
    Default: 180
    Description: The number of day to keep the student lab work in lab Work bucket.
  senderEmail:
    Type: String
    Default: cy.gdoc@gmail.com
    Description: System sender email address
  sesRegion:
    Type: String
    Default: us-east-1
    AllowedValues:
      - ""
      - eu-west-1
      - us-east-1
      - us-west-2
    Description: SES Region. If SES Region is defined, then system will use SES to send all emails.
  smtpHost:
    Type: String
    Default: email-smtp.us-east-1.amazonaws.com
    Description: SMTP Host, if SES Region is not empty string.
  smtpPassword:
    Type: String
    Default: AsvzP5DP9ytXaZ/pNmN/4bl6eFgHL78G33hKWaqELuw7
    NoEcho: true
    Description: SMTP server login password, if SES Region is not empty string.
  stmpUser:
    Type: String
    Default: AKIAIKWPMS2VFUW7PQUA
    Description: SMTP server login user, if SES Region is not empty string.
  dynamodbAutoscaling:
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
    Description: Enable DynamoDB AutoScaling
  teacherEmail:
    Type: String
    Default: cywong@vtc.edu.hk
    Description: Teacher email, and it will add to course table.
  teacherCalenderIcsUrl:
    Type: String
    Default: https://calendar.google.com/calendar/ical/spe8ehlqjkv8hd7mdjs3d2g80c%40group.calendar.google.com/public/basic.ics
    Description: Public Calendar ica uri
  teacherCourse:
    Type: String
    Default: ITP4104 Lab A
    Description: Course Name, and it must match calendar title.
  imageId:
    Type: AWS::EC2::Image::Id
    Default: ami-38e6135e
    Description: AMI ID, and it must be in Lab region.
  labMaterialSnapshotId:
    Type: String
    Default: snap-08fb412d904808988
    Description: Snapshot ID, and it must be in lab region. It will not be backup! Teacher uses it to share lab related files to students!
  labStorageSnapshotId:
    Type: String
    Default: snap-01761ab478dc97796
    Description: Snapshot ID, and it must be in lab region. It will backup with snapshot, and share back to student, if student provides his AWS Account ID.
  instanceType:
    Type: String
    Default: t2.nano
    Description: Instance type that available in region must support VPC.
  share:
    Type: String
    Default: imageId, labMaterialSnapshotId, labStorageSnapshotId, endLabAmi
    Description: Define what will share to students. ["imageId", "labMaterialSnapshotId", "labStorageSnapshotId", "endLabAmi"]
  continue:
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
    Description: true, It will use the end lab ami for the second lab! imageId will only be used in the first lab.
  disableUAC:
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
    Description: Disable Windows User Access Control (UAC)
Conditions:
  EnableDynamodbAutoscaling: !Equals [ !Ref dynamodbAutoscaling, true ]
Resources:
  AWSCloudLabSchedulerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: AWSCloudLabScheduler
      Description: AWS Cloud Lab Scheduler
      Timeout: 60
      Handler: com.cloudlabhk.scheduler.LambdaFunctionHandler
      Runtime: java8
      MemorySize: 256
      CodeUri:
        Bucket: !Ref SourceBucket
        Key: awscloudlabscheduler-1.0.jar
      Policies:
        - AWSLambdaExecute # Managed Policy
        - Version: '2012-10-17' # Policy Document
          Statement:
            - Effect: Allow
              Action:
              - lambda:InvokeFunction
              - lambda:GetFunctionConfiguration
              Resource: "*"
            - Effect: Allow
              Action:
              - dynamodb:Scan
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              Resource:
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/configure
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/course
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/calendar
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/lab
      Events:
        CheckCalender:
          Type: Schedule
          Properties:
            Schedule: cron(0/15 * * * ? *)

  AWSCloudLabBuilderFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: AWSCloudLabBuilder
      Description: AWS Cloud Lab Builder
      Timeout: 180
      Handler: createLabLambda.handler
      Runtime: nodejs6.10
      MemorySize: 1024
      CodeUri:
        Bucket: !Ref SourceBucket
        Key: awscloudlab_latest.zip
      Policies:
        - AWSLambdaExecute # Managed Policy
        - Version: '2012-10-17' # Policy Document
          Statement:
            - Effect: Allow
              Action:
              - lambda:InvokeFunction
              - lambda:GetFunctionConfiguration
              Resource: "*"
            - Effect: Allow
              Action:
              - cloudformation:CreateStack
              - cloudformation:DescribeStacks
              - cloudformation:DescribeStackEvents
              - cloudformation:DescribeStackResources
              - cloudformation:GetTemplate
              - cloudformation:ValidateTemplate
              - cloudformation:DeleteStack
              - cloudformation:ListStacks
              - lambda:*
              - ec2:*
              - events:*
              - sns:Publish
              - ses:SendEmail
              - ses:SendRawEmail
              - iam:*
              - ssm:*
              Resource: "*"
            - Effect: Allow
              Action: iam:PassRole
              Resource: arn:aws:iam::*:role/AWS_Events_Invoke_Targets
            - Effect: Allow
              Action:
              - dynamodb:Scan
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              Resource:
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/configure
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/course
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/calendar
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/lab
      Environment:
        Variables:
          BootstrapDocument: !Ref BootstrapDocument
          DisableUserAccessControlDocument: !Ref DisableUserAccessControlDocument

  AWSCloudLabTerminatorFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: AWSCloudLabTerminator
      Description: AWS Cloud Lab Terminator
      Timeout: 180
      Handler: deleteLabStackLambda.handler
      Runtime: nodejs6.10
      MemorySize: 512
      CodeUri:
        Bucket: !Ref SourceBucket
        Key: awscloudlab_latest.zip
      Policies:
        - AWSLambdaExecute # Managed Policy
        - Version: '2012-10-17' # Policy Document
          Statement:
            - Effect: Allow
              Action:
              - lambda:InvokeFunction
              - lambda:GetFunctionConfiguration
              Resource: "*"
            - Effect: Allow
              Action:
              - cloudformation:CreateStack
              - cloudformation:DescribeStacks
              - cloudformation:DescribeStackEvents
              - cloudformation:DescribeStackResources
              - cloudformation:GetTemplate
              - cloudformation:ValidateTemplate
              - cloudformation:DeleteStack
              - cloudformation:ListStacks
              - lambda:*
              - ec2:*
              - events:*
              - sns:Publish
              - ses:SendEmail
              - ses:SendRawEmail
              - iam:*
              - ssm:*
              Resource: "*"
            - Effect: Allow
              Action: iam:PassRole
              Resource: arn:aws:iam::*:role/AWS_Events_Invoke_Targets
            - Effect: Allow
              Action:
              - dynamodb:Scan
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              Resource:
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/configure
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/course
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/calendar
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/lab

  AWSCloudLabEndLabFunction:
    Type: AWS::Serverless::Function
    DependsOn: AWSCloudLabDeletedTopic
    Properties:
      FunctionName: AWSCloudLabEndedLab
      Description: AWS Cloud Lab End Lab
      Timeout: 180
      Handler: endLabStackLambda.handler
      Runtime: nodejs6.10
      MemorySize: 512
      CodeUri:
        Bucket: !Ref SourceBucket
        Key: awscloudlab_latest.zip
      Policies:
        - AWSLambdaExecute # Managed Policy
        - Version: '2012-10-17' # Policy Document
          Statement:
            - Effect: Allow
              Action:
              - lambda:InvokeFunction
              - lambda:GetFunctionConfiguration
              Resource: "*"
            - Effect: Allow
              Action:
              - cloudformation:CreateStack
              - cloudformation:DescribeStacks
              - cloudformation:DescribeStackEvents
              - cloudformation:DescribeStackResources
              - cloudformation:GetTemplate
              - cloudformation:ValidateTemplate
              - cloudformation:DeleteStack
              - cloudformation:ListStacks
              - lambda:*
              - ec2:*
              - events:*
              - sns:Publish
              - ses:SendEmail
              - ses:SendRawEmail
              - iam:*
              Resource: "*"
            - Effect: Allow
              Action: iam:PassRole
              Resource: arn:aws:iam::*:role/AWS_Events_Invoke_Targets
            - Effect: Allow
              Action:
              - dynamodb:Scan
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              Resource:
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/configure
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/course
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/calendar
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/lab
      Events:
        AWSCloudLabStackEvent:
          Type: SNS
          Properties:
            Topic: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:AWSCloudLabStackEvent

  AWSCloudLabEndLabAmiFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: AWSCloudLabEndLabAmi
      Description: AWS Cloud Lab End Lab AMI
      Timeout: 180
      Handler: endLabAmisLambda.handler
      Runtime: nodejs6.10
      MemorySize: 128
      CodeUri:
        Bucket: !Ref SourceBucket
        Key: awscloudlab_latest.zip
      Policies:
        - AWSLambdaExecute # Managed Policy
        - Version: '2012-10-17' # Policy Document
          Statement:
            - Effect: Allow
              Action:
              - lambda:InvokeFunction
              - lambda:GetFunctionConfiguration
              Resource: "*"
            - Effect: Allow
              Action:
              - cloudformation:CreateStack
              - cloudformation:DescribeStacks
              - cloudformation:DescribeStackEvents
              - cloudformation:DescribeStackResources
              - cloudformation:GetTemplate
              - cloudformation:ValidateTemplate
              - cloudformation:DeleteStack
              - cloudformation:ListStacks
              - lambda:*
              - ec2:*
              - events:*
              - sns:Publish
              - ses:SendEmail
              - ses:SendRawEmail
              - iam:*
              Resource: "*"
            - Effect: Allow
              Action: iam:PassRole
              Resource: arn:aws:iam::*:role/AWS_Events_Invoke_Targets
            - Effect: Allow
              Action:
              - dynamodb:Scan
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              Resource:
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/configure
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/course
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/calendar
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/lab


  AWSCloudLabDBInitFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: AWS Cloud Lab Initial Data
      Timeout: 180
      Handler: dbInit.handler
      Runtime: nodejs6.10
      MemorySize: 128
      CodeUri:
        Bucket: !Ref SourceBucket
        Key: awscloudlab_latest.zip
      Policies:
        - AWSLambdaExecute # Managed Policy
        - Version: '2012-10-17' # Policy Document
          Statement:
            - Effect: Allow
              Action:
              - dynamodb:PutItem
              Resource:
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/configure
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/course
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/calendar
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/lab
      Environment:
        Variables:
          SourceBucket: !Ref SourceBucket
          KeypairsBucket: !Ref KeypairsBucket
          UserListBucket: !Ref UserListBucket
          KeypairExpirationInDays: !Ref KeypairExpirationInDays
          labRegion: !Ref AWS::Region
          cloudformationS3Bucket: !Ref cloudformationS3Bucket
          expirationInDays: !Ref labWorkExpirationInDays
          labWorkBucket: !Ref labWorkBucket
          senderEmail: !Ref senderEmail
          sesRegion: !Ref sesRegion
          smtpHost: !Ref smtpHost
          smtpPassword: !Ref smtpPassword
          stmpUser: !Ref stmpUser
          teacherEmail: !Ref teacherEmail
          teacherCalenderIcsUrl: !Ref teacherCalenderIcsUrl
          teacherCourse: !Ref teacherCourse
          imageId: !Ref imageId
          labMaterialSnapshotId: !Ref labMaterialSnapshotId
          labStorageSnapshotId: !Ref labStorageSnapshotId
          instanceType: !Ref instanceType
          share: !Ref share
          continue: !Ref continue
          disableUAC: !Ref disableUAC

  InitDBCustomReseources:
    Type: Custom::InitDB
    DependsOn:
      - configureDynamoDBTable
      - courseDynamoDBTable
      - calendarDynamoDBTable
      - labDynamoDBTable
    Version: 1.0
    Properties:
      ServiceToken: !GetAtt AWSCloudLabDBInitFunction.Arn
      StackName:
        Ref: AWS::StackName
      SourceBucket: !Ref SourceBucket

# SNS
  AWSCloudLabDeletedTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: AWS Cloud Lab Stack Event
      TopicName: AWSCloudLabStackEvent

# S3 Bucket
  KeypairsS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName:
        Ref: KeypairsBucket
      LifecycleConfiguration:
        Rules:
        - Id: DeleteRule
          Status: Enabled
          ExpirationInDays:
            Ref: KeypairExpirationInDays
  LabWorkS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName:
        Ref: labWorkBucket
      LifecycleConfiguration:
        Rules:
        - Id: DeleteRule
          Status: Enabled
          ExpirationInDays:
            Ref: labWorkExpirationInDays
  UserListS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName:
        Ref: UserListBucket
  CloudformationS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: Private
        BucketName:
          Ref: cloudformationS3Bucket

# DynamoDB
  configureDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: configure
      AttributeDefinitions:
      - AttributeName: projectId
        AttributeType: S
      KeySchema:
      - AttributeName: projectId
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  courseDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: course
      AttributeDefinitions:
      - AttributeName: course
        AttributeType: S
      - AttributeName: teacher
        AttributeType: S
      KeySchema:
      - AttributeName: course
        KeyType: HASH
      - AttributeName: teacher
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  calendarDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: calendar
      AttributeDefinitions:
      - AttributeName: teacher
        AttributeType: S
      - AttributeName: icsUrl
        AttributeType: S
      KeySchema:
      - AttributeName: teacher
        KeyType: HASH
      - AttributeName: icsUrl
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  labDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: lab
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

# DynamoDB AutoScaling
  DynamoDBAutoscalingRole:
    Type: AWS::IAM::Role
    Condition: EnableDynamodbAutoscaling
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - application-autoscaling.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: lambdaIAMRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:DescribeTable
                  - dynamodb:UpdateTable
                Resource:
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*
              - Effect: Allow
                Action:
                  - cloudwatch:DescribeAlarms
                  - cloudwatch:PutMetricAlarm
                  - cloudwatch:DeleteAlarms
                Resource: "*"

  configureDynamoDBTableWriteScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Condition: EnableDynamodbAutoscaling
    Properties:
      MinCapacity: 1
      MaxCapacity: 50
      ResourceId: !Sub table/${configureDynamoDBTable}
      RoleARN: !GetAtt DynamoDBAutoscalingRole.Arn
      ScalableDimension: dynamodb:table:WriteCapacityUnits
      ServiceNamespace: dynamodb

  configureDynamoDBTableWriteScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamodbAutoscaling
    Properties:
      PolicyName: TableWriteScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref configureDynamoDBTableWriteScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        TargetValue: 75

  configureDynamoDBTableReadScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Condition: EnableDynamodbAutoscaling
    Properties:
      MinCapacity: 1
      MaxCapacity: 50
      ResourceId: !Sub table/${configureDynamoDBTable}
      RoleARN: !GetAtt DynamoDBAutoscalingRole.Arn
      ScalableDimension: dynamodb:table:ReadCapacityUnits
      ServiceNamespace: dynamodb

  configureDynamoDBTableReadScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamodbAutoscaling
    Properties:
      PolicyName: TableReadScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref configureDynamoDBTableReadScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        TargetValue: 75

  courseDynamoDBTableWriteScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Condition: EnableDynamodbAutoscaling
    Properties:
      MinCapacity: 1
      MaxCapacity: 50
      ResourceId: !Sub table/${courseDynamoDBTable}
      RoleARN: !GetAtt DynamoDBAutoscalingRole.Arn
      ScalableDimension: dynamodb:table:WriteCapacityUnits
      ServiceNamespace: dynamodb

  courseDynamoDBTableWriteScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamodbAutoscaling
    Properties:
      PolicyName: TableWriteScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref courseDynamoDBTableWriteScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        TargetValue: 75

  courseDynamoDBTableReadScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Condition: EnableDynamodbAutoscaling
    Properties:
      MinCapacity: 1
      MaxCapacity: 50
      ResourceId: !Sub table/${courseDynamoDBTable}
      RoleARN: !GetAtt DynamoDBAutoscalingRole.Arn
      ScalableDimension: dynamodb:table:ReadCapacityUnits
      ServiceNamespace: dynamodb

  courseDynamoDBTableReadScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamodbAutoscaling
    Properties:
      PolicyName: TableReadScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref courseDynamoDBTableReadScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        TargetValue: 75

  calendarDynamoDBTableWriteScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Condition: EnableDynamodbAutoscaling
    Properties:
      MinCapacity: 1
      MaxCapacity: 50
      ResourceId: !Sub table/${calendarDynamoDBTable}
      RoleARN: !GetAtt DynamoDBAutoscalingRole.Arn
      ScalableDimension: dynamodb:table:WriteCapacityUnits
      ServiceNamespace: dynamodb

  calendarDynamoDBTableWriteScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamodbAutoscaling
    Properties:
      PolicyName: TableWriteScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref calendarDynamoDBTableWriteScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        TargetValue: 75

  calendarDynamoDBTableReadScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Condition: EnableDynamodbAutoscaling
    Properties:
      MinCapacity: 1
      MaxCapacity: 50
      ResourceId: !Sub table/${calendarDynamoDBTable}
      RoleARN: !GetAtt DynamoDBAutoscalingRole.Arn
      ScalableDimension: dynamodb:table:ReadCapacityUnits
      ServiceNamespace: dynamodb

  calendarDynamoDBTableReadScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamodbAutoscaling
    Properties:
      PolicyName: TableReadScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref calendarDynamoDBTableReadScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        TargetValue: 75

  labDynamoDBTableWriteScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Condition: EnableDynamodbAutoscaling
    Properties:
      MinCapacity: 1
      MaxCapacity: 50
      ResourceId: !Sub table/${labDynamoDBTable}
      RoleARN: !GetAtt DynamoDBAutoscalingRole.Arn
      ScalableDimension: dynamodb:table:WriteCapacityUnits
      ServiceNamespace: dynamodb

  labDynamoDBTableWriteScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamodbAutoscaling
    Properties:
      PolicyName: TableWriteScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref labDynamoDBTableWriteScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        TargetValue: 75

  labDynamoDBTableReadScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Condition: EnableDynamodbAutoscaling
    Properties:
      MinCapacity: 1
      MaxCapacity: 50
      ResourceId: !Sub table/${labDynamoDBTable}
      RoleARN: !GetAtt DynamoDBAutoscalingRole.Arn
      ScalableDimension: dynamodb:table:ReadCapacityUnits
      ServiceNamespace: dynamodb

  labDynamoDBTableReadScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Condition: EnableDynamodbAutoscaling
    Properties:
      PolicyName: TableReadScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref labDynamoDBTableReadScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBReadCapacityUtilization
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        TargetValue: 75

#Run Command
  BootstrapDocument:
    Type: AWS::SSM::Document
    Properties:
      DocumentType: Command
      Content:
        schemaVersion: "2.2"
        description: 'Enable-OfflineDisk : Find and enable offline disks on Windows.'
        mainSteps:
        - action: aws:runPowerShellScript
          name: EnableOfflineDisk
          precondition:
            StringEquals:
            - platformType
            - Windows
          inputs:
            runCommand:
            - "function Enable-OfflineDisk"
            - "{"
            - '    $offlinedisk = "list disk" | diskpart | where {$_ -match "offline"}'
            - "    if($offlinedisk)"
            - "    {    "
            - '        Write-Output "Following Offline disk(s) found..Trying to bring Online."'
            - "        $offlinedisk"
            - "        foreach($offdisk in $offlinedisk)"
            - "        {    "
            - "            $offdiskS = $offdisk.Substring(2,6)"
            - '            Write-Output "Enabling $offdiskS"'
            - $OnlineDisk = @"
            - select $offdiskS
            - attributes disk clear readonly
            - online disk
            - attributes disk clear readonly
            - "\"@"
            - "            $noOut = $OnlineDisk | diskpart"
            - "            sleep 5    "
            - "       }"
            - ''
            - '        if(($offlinedisk = "list disk" | diskpart | where {$_ -match "offline"}
              ))'
            - "        {        "
            - '            Write-Output "Failed to bring the following disk(s) online"'
            - "            $offlinedisk"
            - "        }"
            - "        else"
            - "        {    "
            - '            Write-Output "Disk(s) are now online."'
            - "        }"
            - ''
            - "    }"
            - "    else"
            - "    {"
            - '        Write-Host "All disk(s) are online!"'
            - "    }"
            - "}"
            - function Disable-InternetExplorerESC {
            - '    $AdminKey = "HKLM:\SOFTWARE\Microsoft\Active Setup\Installed Components\{A509B1A7-37EF-4b3f-8CFC-4F3A74704073}"'
            - '    $UserKey = "HKLM:\SOFTWARE\Microsoft\Active Setup\Installed Components\{A509B1A8-37EF-4b3f-8CFC-4F3A74704073}"'
            - '    Set-ItemProperty -Path $AdminKey -Name "IsInstalled" -Value 0 -Force'
            - '    Set-ItemProperty -Path $UserKey -Name "IsInstalled" -Value 0 -Force'
            - "    Stop-Process -Name Explorer -Force"
            - '    Write-Host "IE Enhanced Security Configuration (ESC) has been disabled." -ForegroundColor
              Green'
            - "}"
            - Enable-OfflineDisk
            - Disable-InternetExplorerESC
            - Restart-Computer -Force

  DisableUserAccessControlDocument:
    Type: AWS::SSM::Document
    Properties:
      DocumentType: Command
      Content:
        schemaVersion: "2.2"
        description: 'Disable-UserAccessControl : User Access Control (UAC).'
        mainSteps:
        - action: aws:runPowerShellScript
          name: EnableOfflineDisk
          precondition:
            StringEquals:
            - platformType
            - Windows
          inputs:
            runCommand:
            - function Disable-UserAccessControl {
            - '    Set-ItemProperty "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
              -Name "ConsentPromptBehaviorAdmin" -Value 00000000 -Force'
            - '    Write-Host "User Access Control (UAC) has been disabled." -ForegroundColor
              Green    '
            - "}"
            - Disable-UserAccessControl
            - Restart-Computer -Force

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: Deployment
        Parameters:
          - SourceBucket
      -
        Label:
          default: System Configuration
        Parameters:
          - KeypairsBucket
          - KeypairExpirationInDays
          - UserListBucket
          - cloudformationS3Bucket
          - labWorkBucket
          - labWorkExpirationInDays
          - sesRegion
          - senderEmail
          - smtpHost
          - smtpPassword
          - stmpUser
          - dynamodbAutoscaling
      -
        Label:
          default: First Course Configuration
        Parameters:
          - teacherEmail
          - teacherCalenderIcsUrl
          - teacherCourse
          - instanceType
          - imageId
          - labMaterialSnapshotId
          - labStorageSnapshotId
          - labWorkExpirationInDays
          - share
          - continue
          - disableUAC
    ParameterLabels:
      SourceBucket:
        default: Source Bucket
      KeypairsBucket:
        default: EC2 Key pair Bucket
      UserListBucket:
        default: User List Bucket
      KeypairExpirationInDays:
        default: Key pair Expiration In Days
      cloudformationS3Bucket:
        default: Lab Cloudformation and Lambda Package Bucket
      labWorkExpirationInDays:
        default: Lab Work Expiration In Days
      labWorkBucket:
        default: Student Lab Work Bucket
      senderEmail:
        default: Sender Email
      sesRegion:
        default: SES Region
      smtpHost:
        default: SMTP Host
      smtpPassword:
        default: SMTP Password
      stmpUser:
        default: SMTP User
      teacherEmail:
        default: Course Teacher Email
      teacherCalenderIcsUrl:
        default: Course Teacher Public Calender ICS Url
      teacherCourse:
        default: Course Name
      imageId:
        default: Lab EC2 AMI
      labMaterialSnapshotId:
        default: Lab Material Snapshot ID
      labStorageSnapshotId:
        default: Lab Storage Snapshot ID
      instanceType:
        default: Instance Type for Lab
      share:
        default: Share Mode
      continue:
        default: Is Continue
      dynamodbAutoscaling:
        default: Enable DynamoDB AutoScaling
      disableUAC:
        default: Disable Windows User Access Control (UAC) and it requires reboot!
