AWSTemplateFormatVersion: "2010-09-09"
Transform: 'AWS::Serverless-2016-10-31'
Description: AWS Cloud Lab SAM Deployment
Parameters:
  SourceBucket:
    Type: String
    Default: cloudformation2.cloudlabhk.com
    Description: Bucket Lambda deployment packages - awscloudlab_latest.zip and awscloudlabscheduler-1.0.jar
  KeypairsBucket:
    Type: String
    Default: awscloudlab-keypair
    Description: Bucket stores EC2 keypairs
  UserListBucket:
    Type: String
    Default: awscloudlab-userlist
    Description: Bucket stores Class Name List
  KeypairExpirationInDays:
    Type: Number
    Default: 30
    Description: The number of day to keep the key pair in KeypairsBucket
  cloudformationS3Bucket:
    Type: String
    Default: awscloudlab-cloudformation
    Description: Bucket store all Cloudformation templates and Lambda packages for Lab Environment.
  labWorkBucket:
    Type: String
    Default: awscloudlab-labwork
    Description: Bucket Store student works.
  labWorkExpirationInDays:
    Type: Number
    Default: 180
    Description: The number of day to keep the student lab work in lab Work bucket.
  senderEmail:
    Type: String
    Default: cy.gdoc@gmail.com
    Description: System sender email address
  sesRegion:
    Type: String
    Default: ""
    AllowedValues:
      - ""
      - eu-west-1
      - us-east-1
      - us-west-2
    Description: SES Region. If SES Region is defined, then system will use SES to send all emails.
  smtpHost:
    Type: String
    Default: email-smtp.us-east-1.amazonaws.com
    Description: SMTP Host, if SES Region is not empty string.
  smtpPassword:
    Type: String
    Default: AsvzP5DP9ytXaZ/pNmN/4bl6eFgHL78G33hKWaqELuw7
    NoEcho: true
    Description: SMTP server login password, if SES Region is not empty string.
  stmpUser:
    Type: String
    Default: AKIAIKWPMS2VFUW7PQUA
    Description: SMTP server login user, if SES Region is not empty string.
  teacherEmail:
    Type: String
    Default: cywong@vtc.edu.hk
    Description: Teacher email, and it will add to course table.
  teacherCalenderIcsUrl:
    Type: String
    Default: https://calendar.google.com/calendar/ical/spe8ehlqjkv8hd7mdjs3d2g80c%40group.calendar.google.com/public/basic.ics
    Description: Public Calendar ica uri
  teacherCourse:
    Type: String
    Default: ITP4104 Lab A
    Description: Course Name, and it must match calendar title.
  imageId:
    Type: AWS::EC2::Image::Id
    Default: ami-38e6135e
    Description: AMI ID, and it must be in Lab region.
  labMaterialSnapshotId:
    Type: String
    Default: snap-0e5811ac573f45c2b
    Description: Snapshot ID, and it must be in lab region. It will not be backup! Teacher uses it to share lab related files to students!
  labStorageSnapshotId:
    Type: String
    Default: snap-0e5811ac573f45c2b
    Description: Snapshot ID, and it must be in lab region. It will backup with snapshot, and share back to student, if student provides his AWS Account ID.
  instanceType:
    Type: String
    Default: t2.nano
    Description: Instance type that available in region must support VPC.
  share:
    Type: String
    Default: imageId, labMaterialSnapshotId, labStorageSnapshotId, endLabAmi
    Description: Define what will share to students. ["imageId", "labMaterialSnapshotId", "labStorageSnapshotId", "endLabAmi"]
  continue:
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
    Description: true, It will use the end lab ami for the second lab! imageId will only be used in the first lab.

Resources:
  AWSCloudLabSchedulerFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: AWSCloudLabScheduler
      Description: AWS Cloud Lab Scheduler
      Timeout: 60
      Handler: com.cloudlabhk.scheduler.LambdaFunctionHandler
      Runtime: java8
      MemorySize: 256
      CodeUri:
        Bucket: !Ref SourceBucket
        Key: awscloudlabscheduler-1.0.jar
      Policies:
        - AWSLambdaExecute # Managed Policy
        - Version: '2012-10-17' # Policy Document
          Statement:
            - Effect: Allow
              Action:
              - lambda:InvokeFunction
              - lambda:GetFunctionConfiguration
              Resource: "*"
            - Effect: Allow
              Action:
              - dynamodb:Scan
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              Resource:
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/configure
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/course
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/calendar
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/lab
      Events:
        CheckCalender:
          Type: Schedule
          Properties:
            Schedule: cron(0/15 * * * ? *)

  AWSCloudLabBuilderFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: AWSCloudLabBuilder
      Description: AWS Cloud Lab Builder
      Timeout: 180
      Handler: createLabLambda.handler
      Runtime: nodejs6.10
      MemorySize: 1024
      CodeUri:
        Bucket: !Ref SourceBucket
        Key: awscloudlab_latest.zip
      Policies:
        - AWSLambdaExecute # Managed Policy
        - Version: '2012-10-17' # Policy Document
          Statement:
            - Effect: Allow
              Action:
              - lambda:InvokeFunction
              - lambda:GetFunctionConfiguration
              Resource: "*"
            - Effect: Allow
              Action:
              - cloudformation:CreateStack
              - cloudformation:DescribeStacks
              - cloudformation:DescribeStackEvents
              - cloudformation:DescribeStackResources
              - cloudformation:GetTemplate
              - cloudformation:ValidateTemplate
              - cloudformation:DeleteStack
              - cloudformation:ListStacks
              - lambda:*
              - ec2:*
              - events:*
              - sns:Publish
              - ses:SendEmail
              - ses:SendRawEmail
              - iam:*
              Resource: "*"
            - Effect: Allow
              Action: iam:PassRole
              Resource: arn:aws:iam::*:role/AWS_Events_Invoke_Targets
            - Effect: Allow
              Action:
              - dynamodb:Scan
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              Resource:
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/configure
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/course
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/calendar
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/lab

  AWSCloudLabTerminatorFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: AWSCloudLabTerminator
      Description: AWS Cloud Lab Terminator
      Timeout: 180
      Handler: deleteLabStackLambda.handler
      Runtime: nodejs6.10
      MemorySize: 512
      CodeUri:
        Bucket: !Ref SourceBucket
        Key: awscloudlab_latest.zip
      Policies:
        - AWSLambdaExecute # Managed Policy
        - Version: '2012-10-17' # Policy Document
          Statement:
            - Effect: Allow
              Action:
              - lambda:InvokeFunction
              - lambda:GetFunctionConfiguration
              Resource: "*"
            - Effect: Allow
              Action:
              - cloudformation:CreateStack
              - cloudformation:DescribeStacks
              - cloudformation:DescribeStackEvents
              - cloudformation:DescribeStackResources
              - cloudformation:GetTemplate
              - cloudformation:ValidateTemplate
              - cloudformation:DeleteStack
              - cloudformation:ListStacks
              - lambda:*
              - ec2:*
              - events:*
              - sns:Publish
              - ses:SendEmail
              - ses:SendRawEmail
              - iam:*
              Resource: "*"
            - Effect: Allow
              Action: iam:PassRole
              Resource: arn:aws:iam::*:role/AWS_Events_Invoke_Targets
            - Effect: Allow
              Action:
              - dynamodb:Scan
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              Resource:
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/configure
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/course
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/calendar
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/lab

  AWSCloudLabEndLabFunction:
    Type: 'AWS::Serverless::Function'
    DependsOn: AWSCloudLabDeletedTopic
    Properties:
      FunctionName: AWSCloudLabEndedLab
      Description: AWS Cloud Lab End Lab
      Timeout: 180
      Handler: endLabStackLambda.handler
      Runtime: nodejs6.10
      MemorySize: 512
      CodeUri:
        Bucket: !Ref SourceBucket
        Key: awscloudlab_latest.zip
      Policies:
        - AWSLambdaExecute # Managed Policy
        - Version: '2012-10-17' # Policy Document
          Statement:
            - Effect: Allow
              Action:
              - lambda:InvokeFunction
              - lambda:GetFunctionConfiguration
              Resource: "*"
            - Effect: Allow
              Action:
              - cloudformation:CreateStack
              - cloudformation:DescribeStacks
              - cloudformation:DescribeStackEvents
              - cloudformation:DescribeStackResources
              - cloudformation:GetTemplate
              - cloudformation:ValidateTemplate
              - cloudformation:DeleteStack
              - cloudformation:ListStacks
              - lambda:*
              - ec2:*
              - events:*
              - sns:Publish
              - ses:SendEmail
              - ses:SendRawEmail
              - iam:*
              Resource: "*"
            - Effect: Allow
              Action: iam:PassRole
              Resource: arn:aws:iam::*:role/AWS_Events_Invoke_Targets
            - Effect: Allow
              Action:
              - dynamodb:Scan
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              Resource:
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/configure
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/course
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/calendar
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/lab
      Events:
        AWSCloudLabStackEvent:
          Type: SNS
          Properties:
            Topic: !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:AWSCloudLabStackEvent

  AWSCloudLabEndLabAmiFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: AWSCloudLabEndLabAmi
      Description: AWS Cloud Lab End Lab AMI
      Timeout: 180
      Handler: endLabAmisLambda.handler
      Runtime: nodejs6.10
      MemorySize: 128
      CodeUri:
        Bucket: !Ref SourceBucket
        Key: awscloudlab_latest.zip
      Policies:
        - AWSLambdaExecute # Managed Policy
        - Version: '2012-10-17' # Policy Document
          Statement:
            - Effect: Allow
              Action:
              - lambda:InvokeFunction
              - lambda:GetFunctionConfiguration
              Resource: "*"
            - Effect: Allow
              Action:
              - cloudformation:CreateStack
              - cloudformation:DescribeStacks
              - cloudformation:DescribeStackEvents
              - cloudformation:DescribeStackResources
              - cloudformation:GetTemplate
              - cloudformation:ValidateTemplate
              - cloudformation:DeleteStack
              - cloudformation:ListStacks
              - lambda:*
              - ec2:*
              - events:*
              - sns:Publish
              - ses:SendEmail
              - ses:SendRawEmail
              - iam:*
              Resource: "*"
            - Effect: Allow
              Action: iam:PassRole
              Resource: arn:aws:iam::*:role/AWS_Events_Invoke_Targets
            - Effect: Allow
              Action:
              - dynamodb:Scan
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              Resource:
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/configure
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/course
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/calendar
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/lab


  AWSCloudLabDBInitFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: AWS Cloud Lab Initial Data
      Timeout: 180
      Handler: dbInit.handler
      Runtime: nodejs6.10
      MemorySize: 128
      CodeUri:
        Bucket: !Ref SourceBucket
        Key: awscloudlab_latest.zip
      Policies:
        - AWSLambdaExecute # Managed Policy
        - Version: '2012-10-17' # Policy Document
          Statement:
            - Effect: Allow
              Action:
              - dynamodb:PutItem
              Resource:
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/configure
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/course
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/calendar
              - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/lab
      Environment:
        Variables:
          SourceBucket: !Ref SourceBucket
          KeypairsBucket: !Ref KeypairsBucket
          UserListBucket: !Ref UserListBucket
          KeypairExpirationInDays: !Ref KeypairExpirationInDays
          labRegion: !Ref AWS::Region
          cloudformationS3Bucket: !Ref cloudformationS3Bucket
          expirationInDays: !Ref labWorkExpirationInDays
          labWorkBucket: !Ref labWorkBucket
          senderEmail: !Ref senderEmail
          sesRegion: !Ref sesRegion
          smtpHost: !Ref smtpHost
          smtpPassword: !Ref smtpPassword
          stmpUser: !Ref stmpUser
          teacherEmail: !Ref teacherEmail
          teacherCalenderIcsUrl: !Ref teacherCalenderIcsUrl
          teacherCourse: !Ref teacherCourse
          imageId: !Ref imageId
          labMaterialSnapshotId: !Ref labMaterialSnapshotId
          labStorageSnapshotId: !Ref labStorageSnapshotId
          instanceType: !Ref instanceType
          share: !Ref share
          continue: !Ref continue

  LexBuilderCustomReseources:
    Type: Custom::InitDB
    DependsOn:
      - configureDynamoDBTable
      - courseDynamoDBTable
      - calendarDynamoDBTable
      - labDynamoDBTable
    Version: 1.0
    Properties:
      ServiceToken: !GetAtt AWSCloudLabDBInitFunction.Arn
      StackName:
        Ref: AWS::StackName
      SourceBucket: !Ref SourceBucket

# SNS
  AWSCloudLabDeletedTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: AWS Cloud Lab Stack Event
      TopicName: AWSCloudLabStackEvent

# S3 Bucket
  KeypairsS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName:
        Ref: KeypairsBucket
      LifecycleConfiguration:
        Rules:
        - Id: DeleteRule
          Status: Enabled
          ExpirationInDays:
            Ref: KeypairExpirationInDays
  LabWorkS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName:
        Ref: labWorkBucket
      LifecycleConfiguration:
        Rules:
        - Id: DeleteRule
          Status: Enabled
          ExpirationInDays:
            Ref: labWorkExpirationInDays
  UserListS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName:
        Ref: UserListBucket
  CloudformationS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: Private
        BucketName:
          Ref: cloudformationS3Bucket

# DynamoDB
  configureDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: configure
      AttributeDefinitions:
      - AttributeName: projectId
        AttributeType: S
      KeySchema:
      - AttributeName: projectId
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: '1'
        WriteCapacityUnits: '1'
  courseDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: course
      AttributeDefinitions:
      - AttributeName: course
        AttributeType: S
      - AttributeName: teacher
        AttributeType: S
      KeySchema:
      - AttributeName: course
        KeyType: HASH
      - AttributeName: teacher
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: '1'
        WriteCapacityUnits: '1'
  calendarDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: calendar
      AttributeDefinitions:
      - AttributeName: teacher
        AttributeType: S
      - AttributeName: icsUrl
        AttributeType: S
      KeySchema:
      - AttributeName: teacher
        KeyType: HASH
      - AttributeName: icsUrl
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: '1'
        WriteCapacityUnits: '1'
  labDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: lab
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: '1'
        WriteCapacityUnits: '1'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Deployment"
        Parameters:
          - SourceBucket
      -
        Label:
          default: "System Configuration"
        Parameters:
          - KeypairsBucket
          - KeypairExpirationInDays
          - UserListBucket
          - cloudformationS3Bucket
          - labWorkBucket
          - labWorkExpirationInDays
          - sesRegion
          - senderEmail
          - smtpHost
          - smtpPassword
          - stmpUser
      -
        Label:
          default: "First Course Configuration"
        Parameters:
          - teacherEmail
          - teacherCalenderIcsUrl
          - teacherCourse
          - instanceType
          - imageId
          - labMaterialSnapshotId
          - labStorageSnapshotId
          - labWorkExpirationInDays
          - share
          - continue
    ParameterLabels:
      SourceBucket:
        default: "Source Bucket"
      KeypairsBucket:
        default: "EC2 Key pair Bucket"
      UserListBucket:
        default: "User List Bucket"
      KeypairExpirationInDays:
        default: "Key pair Expiration In Days"
      cloudformationS3Bucket:
        default: "Lab Cloudformation and Lambda Package Bucket"
      labWorkExpirationInDays:
        default: "Lab Work Expiration In Days"
      labWorkBucket:
        default: "Student Lab Work Bucket"
      senderEmail:
        default: "Sender Email"
      sesRegion:
        default: "SES Region"
      smtpHost:
        default: "SMTP Host"
      smtpPassword:
        default: "SMTP Password"
      stmpUser:
        default: "SMTP User"
      teacherEmail:
        default: "Course Teacher Email"
      teacherCalenderIcsUrl:
        default: "Course Teacher Public Calender ICS Url"
      teacherCourse:
        default: "Course Name"
      imageId:
        default: "Lab EC2 AMI"
      labMaterialSnapshotId:
        default: "Lab Material Snapshot ID"
      labStorageSnapshotId:
        default: "Lab Storage Snapshot ID"
      instanceType:
        default: "Instance Type"
      share:
        default: "Share Mode"
      continue:
        default: "Is Continue"